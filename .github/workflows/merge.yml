name: Deployment
on:
  push:
    branches:
      - dev

jobs:
  test:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Copy env for test
        run: cp .env.test .env

      - name: Install node dependencies
        run: npm ci

      - name: Run Sveltekit sync
        run: npm run sync

      - name: Run type-check
        run: npm run check

      - name: Run linter
        run: npm run lint

      - name: Run build test
        run: npm run build

  deploy:
    name: Deploy
    needs:
      - test
    runs-on: ubuntu-latest

    environment: Production
    env:
      MAIL_FROM_NAME: ${{ vars.MAIL_FROM_NAME }}
      MAIL_FROM_ADDRESS: ${{ vars.MAIL_FROM_ADDRESS }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install node dependencies
        run: npm ci

      - name: Run Sveltekit sync
        run: npm run sync

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          NODE_ENV: production
          ORIGIN: ${{ vars.ORIGIN }}
          PUBLIC_APP_ENV: production
          PUBLIC_APP_NAME: ${{ vars.PUBLIC_APP_NAME }}
          PUBLIC_RECAPTCHA_SITE_KEY: ${{ vars.RECAPTCHA_SITE_KEY }}
          PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          PUBLIC_SENTRY_SAMPLE_RATE: ${{ vars.SENTRY_SAMPLE_RATE }}
          PUBLIC_SENTRY_RELEASE: ${{ vars.GITHUB_SHA }}
          STORAGE_API: ${{ secrets.STORAGE_API }}
          STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}
          MAIL_FROM_NAME: ${{ vars.MAIL_FROM_NAME }}
          MAIL_FROM_ADDRESS: ${{ vars.MAIL_FROM_ADDRESS }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SENTRY_RELEASE: ${{ vars.GITHUB_SHA }}
          FIREBASE_CLI_EXPERIMENTS: webframeworks,pintags
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live

      - name: Seed database
        run: npm run firebase:seed
