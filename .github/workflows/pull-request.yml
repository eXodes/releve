name: Integration
on: pull_request

jobs:
  test:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup test .env
        run: cp .env.test .env

      - name: Install node dependencies
        run: npm ci

      - name: Run Sveltekit sync
        run: npm run sync

      - name: Run type-check
        run: npm run check

      - name: Run linter
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Setup Firebase
        uses: w9jds/setup-firebase@main
        with:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Setup Firebase Extensions
        run: firebase ext:export --force

      - name: Replace SMTP URI for Extensions
        uses: Langsdorf/env-replace@v1.0.0
        with:
          key: "SMTP_CONNECTION_URI"
          value: ${{ secrets.SMTP_URI }}
          file: "./extensions/firestore-send-email.env"

      - name: Replace SMTP Password for Extensions
        uses: Langsdorf/env-replace@v1.0.0
        with:
          key: "SMTP_PASSWORD"
          value: ""
          file: "./extensions/firestore-send-email.env"

      - name: Add SMTP Password for Extensions
        run: echo SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} >> ./extensions/firestore-send-email.secret.local

      - name: Cache emulators
        uses: actions/cache@v3
        with:
          key: firebase-emulators
          path: /github/home/.cache/firebase/emulators

      - name: Run test
        run: firebase emulators:exec --only=auth,firestore,storage,extensions runner/test.sh
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks,pintags
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_CLOUD_PROJECT: ${{ vars.FIREBASE_PROJECT_ID }}
          STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}

  deploy:
    name: Deploy
    needs:
      - test
    runs-on: ubuntu-latest

    environment: Preview

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install node dependencies
        run: npm ci

      - name: Run Sveltekit sync
        run: npm run sync

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          NODE_ENV: production
          ORIGIN: ${{ vars.ORIGIN }}
          PUBLIC_APP_ENV: preview
          PUBLIC_APP_NAME: ${{ vars.PUBLIC_APP_NAME }}
          PUBLIC_RECAPTCHA_SITE_KEY: ${{ vars.RECAPTCHA_SITE_KEY }}
          PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          PUBLIC_SENTRY_SAMPLE_RATE: ${{ vars.SENTRY_SAMPLE_RATE }}
          PUBLIC_SENTRY_RELEASE: ${{ github.event.pull_request.number }}
          PUBLIC_FIREBASE_EMULATOR: false
          STORAGE_API: ${{ vars.STORAGE_API }}
          STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}
          MAIL_FROM_NAME: ${{ vars.MAIL_FROM_NAME }}
          MAIL_FROM_ADDRESS: ${{ vars.MAIL_FROM_ADDRESS }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          SENTRY_RELEASE: ${{ github.event.pull_request.number }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          FIREBASE_CLI_EXPERIMENTS: webframeworks,pintags
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: ${{ vars.GITHUB_REF_NAME }}

